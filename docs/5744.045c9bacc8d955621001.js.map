{"version":3,"file":"5744.045c9bacc8d955621001.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/TonModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLang.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nimport tonGemPath from '../../../assets/ton-gem.png';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n  canSendTons: boolean;\n  onSendTons: () => void;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n  canSendTons,\n  onSendTons,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n        {canSendTons && (\n          <MenuItem\n            customIcon={<i className=\"icon icon-custom-image\" style={`background-image: url(${tonGemPath});`} />}\n            onClick={onSendTons}\n          >\n            Send TON\n          </MenuItem>\n        )}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TonModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TonModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TonModal = useModuleLoader(Bundles.Extra, 'TonModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TonModal ? <TonModal {...props} /> : undefined;\n};\n\nexport default TonModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        transformOriginX={transformOriginX}\n        transformOriginY={transformOriginY}\n        positionX={positionX}\n        positionY={positionY}\n        style={menuStyle}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport TonModal from '../middle/composer/TonModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  const [isTonModalOpen, openTonModal, closeTonModal] = useFlag();\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <TonModal\n        isOpen={isTonModalOpen}\n        chatId={chatId}\n        onClear={closeTonModal}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              hasReplaceableMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              canSendTons={!isChatWithSelf && isUserId(chatId)}\n              onSendTons={openTonModal}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: never;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useOldLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={buildClassName(styles.canvas, 'canvas-blur-setup')}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { CustomPeer, CustomPeerType, UniqueCustomPeer } from '../../types';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByKey } from '../../util/iteratees';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  selectedCategories?: CustomPeerType[];\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n  isCountryList?: boolean;\n  countryList?: ApiCountry[];\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  categories,\n  itemIds,\n  selectedCategories,\n  categoryPlaceholderKey,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedSelectedIds,\n  lockedUnselectedIds,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  onSelectedCategoriesChange,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  isCountryList,\n  countryList,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      onSelectedCategoriesChange?.(newSelectedCategories);\n    } else {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      onSelectedIdsChange?.(newSelectedIds);\n    }\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const lang = useOldLang();\n\n  const countriesByIso = useMemo(() => {\n    if (!countryList) return undefined;\n    return buildCollectionByKey(countryList, 'iso2');\n  }, [countryList]);\n\n  const renderCategory = useLastCallback((category: CustomPeer) => {\n    return (\n      <PrivateChatInfo\n        customPeer={category}\n      />\n    );\n  });\n\n  const renderChatInfo = useLastCallback((id: string) => {\n    const isUnselectable = lockedUnselectedIdsSet.has(id);\n    if (isCountryList && countriesByIso) {\n      const country = countriesByIso[id];\n      return <div>{country.defaultName}</div>;\n    } else if (isUserId(id)) {\n      return (\n        <PrivateChatInfo\n          forceShowSelf={forceShowSelf}\n          userId={id}\n          status={isUnselectable ? lockedUnselectedSubtitle : undefined}\n        />\n      );\n    } else {\n      return <GroupChatInfo chatId={id} status={isUnselectable ? lockedUnselectedSubtitle : undefined} />;\n    }\n  });\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const shouldRenderLockIcon = lockedUnselectedIdsSet.has(id);\n    const isLocked = lockedSelectedIdsSet.has(id) || shouldRenderLockIcon;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n    const renderCheckbox = () => {\n      return (isViewOnly || shouldRenderLockIcon) ? undefined : (\n        <Checkbox\n          label=\"\"\n          disabled={isLocked}\n          checked={isChecked}\n          round={isRoundCheckbox}\n        />\n      );\n    };\n    return (\n      <ListItem\n        key={id}\n        className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        allowDisabledClick={Boolean(onDisabledClick)}\n        secondaryIcon={shouldRenderLockIcon ? 'lock-badge' : undefined}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        ripple\n      >\n        {!isRoundCheckbox ? renderCheckbox() : undefined}\n        {category ? renderCategory(category) : renderChatInfo(id)}\n        {isRoundCheckbox ? renderCheckbox() : undefined}\n      </ListItem>\n    );\n  }, [\n    categoriesByType, isRoundCheckbox, isViewOnly, lockedSelectedIdsSet, lockedUnselectedIdsSet,\n    onDisabledClick, renderChatInfo, selectedCategories, selectedIds,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    return (\n      <div key=\"categories\">\n        {Boolean(categories?.length) && (\n          <>\n            {categoryPlaceholderKey && <div className=\"picker-category-title\">{lang(categoryPlaceholderKey)}</div>}\n            {categories?.map((category) => renderItem(category.type, true))}\n            <div className=\"picker-category-title\">{lang('FilterChats')}</div>\n          </>\n        )}\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PickerSelectedItem\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  customPeer?: CustomPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  customPeer,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <Icon name={icon} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (customPeer || user || chat) {\n    iconElement = (\n      <Avatar\n        peer={customPeer || user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = (customPeer && lang(customPeer.titleKey))\n      || (!chat || (user && !isSavedMessages)\n        ? getUserFirstOrLastName(user)\n        : getChatTitle(lang, chat, isSavedMessages));\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    (chat?.isForum || customPeer?.isAvatarSquare) && 'square-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(customPeer || chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb canvas-blur-setup\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const userProfilePhotos = user?.profilePhotos;\n  const chatProfilePhotos = chat?.profilePhotos;\n  const photos = userProfilePhotos?.photos || chatProfilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePrevious(mediaIndex);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, userProfilePhotos?.count || 0, chatProfilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userProfilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userProfilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userProfilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userProfilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userProfilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content);\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftPremiumModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftPremiumModal({ forUserIds: [user.id] });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\">{renderText(lang(valueKey, [formattedDate, age], undefined, age))}</div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const lang = useOldLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: lang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, lang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), lang(isChat ? 'Link' : 'Username'));\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir=\"auto\">{formatUsername(mainUsername.username, isChat)}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{lang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {lang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{lang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  shouldDelayInit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways={!shouldDelayInit}\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways={!shouldDelayInit}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways={!shouldDelayInit}\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaHasPreview = lastMessage && !getMessageSticker(lastMessage);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(lastMessage) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { TON_MSG_ADDRESS_RESPONSE } from '../../config';\nimport {\n  getChatTitle, getMessageHtmlId, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    shareTonAddress,\n    saveTonAddress,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  useEffect(() => {\n    if (!message.isOutgoing && message.content.action!.type === 'tonAddressRequest') {\n      shareTonAddress({\n        requesterId: message.senderId!,\n        requestedAt: message.date * 1000,\n      });\n    } else if (!message.isOutgoing && message.content.action!.type === 'tonAddressResponse') {\n      saveTonAddress({\n        chatId: message.senderId!,\n        address: message.content.text!.text.replace(TON_MSG_ADDRESS_RESPONSE, ''),\n      });\n    }\n  }, [message, saveTonAddress, shareTonAddress]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type LangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useSignal,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat, getMessageMediaThumbDataUri, getVideoMediaHash, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', 'canvas-blur-setup', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail canvas-blur-setup blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', !noThumb && 'canvas-blur-setup', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useCanvasBlur(\n    dataUri,\n    isDisabled,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n  scrollTargetPosition?: ScrollTargetPosition,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          scrollPosition,\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions,\n\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  shouldDelayInit?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  shouldDelayInit,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n        shouldDelayInit={shouldDelayInit}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    Boolean(radius) && `border-radius: ${radius}%`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type {\n  ApiInputInvoice, ApiRequestInputInvoice, ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { GlobalState } from '../types';\n\nimport { formatInteger } from '../../util/textFormat';\nimport { selectChat, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug' || inputInvoice.type === 'stars') return inputInvoice;\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      peerColorId: -1, // Defaults to black\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(amount: number) {\n  if (amount < 0) {\n    return `- ${formatInteger(Math.abs(amount))}`;\n  }\n\n  return `+ ${formatInteger(amount)}`;\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        canvas.classList.remove('canvas-blur-setup');\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useSignal } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  addLocalizationCallback,\n  getTranslationFn,\n  type LangFn,\n} from '../util/localization';\nimport useEffectOnce from './useEffectOnce';\nimport useForceUpdate from './useForceUpdate';\n\nconst useLang = (): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useEffectOnce(() => {\n    return addLocalizationCallback(forceUpdate);\n  });\n\n  return getTranslationFn();\n};\n\nexport default useLang;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollTargetPosition,\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_TO_BE_DISTRIBUTED: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'toBeDistributed',\n  titleKey: 'BoostingToBeDistributed',\n  avatarIcon: 'user',\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerMediaHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","result","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","canSendTons","onSendTons","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","customIcon","tonGemPath","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","TonModal","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","value","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isTonModalOpen","openTonModal","closeTonModal","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","getMediaThumbUri","localBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","categories","itemIds","selectedCategories","categoryPlaceholderKey","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedSelectedIds","lockedUnselectedIds","lockedUnselectedSubtitle","forceShowSelf","isViewOnly","onSelectedCategoriesChange","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","isCountryList","countryList","shouldMinimize","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","handleItemClick","categoryType","newSelectedCategories","splice","newSelectedIds","handleFilterChange","viewportIds","getMore","useInfiniteScroll","countriesByIso","renderCategory","category","PrivateChatInfo","customPeer","renderChatInfo","isUnselectable","country","defaultName","GroupChatInfo","renderItem","isCategory","shouldRenderLockIcon","isLocked","isChecked","renderCheckbox","ListItem","inactive","secondaryIcon","beforeChildren","PickerSelectedItem","clickArg","canClose","isMinimized","InputText","InfiniteScroll","Loading","isSelf","fluid","withPeerColors","iconElement","titleText","titleKey","isAvatarSquare","leftText","rightText","floatingBadgeText","floatingBadgeIcon","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","isSynced","userStatus","selectUserStatus","noFake","noVerified","adminMember","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","userProfilePhotos","profilePhotos","chatProfilePhotos","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentHeight","handleResize","entry","contentRect","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftPremiumModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserIds","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","BusinessHours","usernameList","otherUsernames","usernameLinks","s","idx","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","shouldDelayInit","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","AnimatedSticker","animatedIcon","roundToNearestEven","play","CustomEmojiEffect","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","contextActions","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","suggestedVideoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetchBlob","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","selectSimilarChannelIds","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","checkGiftCode","getReceipt","shareTonAddress","saveTonAddress","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","withStars","targetUsers","TON_MSG_ADDRESS_RESPONSE","requesterId","requestedAt","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ActionMessageSuggestedAvatar","SimilarChannels","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","useEnsureStory","hasCustomColor","isWithTextColor","documents","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","isToBottom","scrollPosition","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","innerWidth","anchorCenterY","anchorBottomY","REACTION_SIZE","chosen","noAppearAnimation","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","closeStoryViewer","openUrl","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","getRequestInputInvoice","inputInvoice","boostChannelId","amount","currency","option","purpose","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","peerColorId","withPremiumGradient","formatStarsTransactionAmount","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","scrollLeft","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","useEffectOnce","addLocalizationCallback","getTranslationFn","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","p","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_TO_BE_DISTRIBUTED","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}